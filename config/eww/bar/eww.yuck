; Declare eww instance for updating state variables
(defvar eww "eww --config ~/.config/eww/bar")

; Workspaces
(deflisten workspaces
  :initial "(eventbox :onscroll \"~/.local/bin/cycleworkspace {}\" (box :class \"workspaces\" :space-evenly \"true\" (button :class \"workspace-one\" :onclick \"hyprctl dispatch workspace 1\" \"\") (button :class \"workspace-two\" :onclick \"hyprctl dispatch workspace 2\" \"\") (button :class \"workspace-three\" :onclick \"hyprctl dispatch workspace 3\" \"\") (button :class \"workspace-four\" :onclick \"hyprctl dispatch workspace 4\" \"\") (button :class \"workspace-five\" :onclick \"hyprctl dispatch workspace 5\" \"\") (button :class \"workspace-six\" :onclick \"hyprctl dispatch workspace 6\" \"\")))"
  `~/.local/bin/workspaces`
)

; Clock
(defpoll hour :interval "60s"
	`date +"%H"`)
(defpoll min :interval "60s"
	`date +"%M"`)

(defwidget clock [hour min]
  (eventbox :class "clock" :onclick "alacritty -e btop"
    (box :space-evenly "true" :spacing 2
      (button :class "time" :onclick "~/.local/bin/launch-calendar" "${hour}")
      (button :class "time" :onclick "~/.local/bin/launch-calendar" "${min}")
    )
  )
)

; Dashboard Launcher
(defwidget launcher []
  (box :space-evenly "false" (button :class "launcher" :onclick "" :tooltip "Dashboard" ""))
)

; Power Menu
(defwidget power []
  (box :space-evenly "false" (button :class "power" :onclick "~/.local/bin/powermenu" :tooltip "Quit" ""))
)

; System Monitor (CPU, Memory, Disk, Temperature)
(defvar system_usage false)

(defwidget cpu []
  (box :class "cpu" :space-evenly false :spacing 4
    (label :class "cpu-icon" :text "")
    (label :class "cpu-label" :text "${round(EWW_CPU.avg, 1)}%")
  )
)

(defwidget memory []
  (box :class "memory" :space-evenly false :spacing 4
    (label :class "memory-icon" :text "")
    (label :class "memory-label" :text "${round(EWW_RAM.used_mem_perc, 1)}%")
  )
)

(defwidget sysmonitor []
  (eventbox :onhover "${eww} update system_usage=true" :onhoverlost "${eww} update system_usage=false"
    (box :space-evenly false :spacing 2
      (button :class "sysmonitor" :onclick "" {EWW_CPU.avg > 75 || EWW_RAM.used_mem_perc > 75 ? "" : ""})
      (revealer :transition "slideright" :reveal system_usage :duration "500ms"
        (box :class "sysreveal" :space-evenly false :spacing 8
          (cpu) (memory)
        )
      )
    )
  )
)

; Recents zathura documents
(defpoll recent_count :interval "60s"
  `~/.local/bin/zathura count_recent`
)

(defwidget zathura []
  (box :space-evenly "false" (button :class "zathura" :onclick "~/.local/bin/zathura" :tooltip "Recent documents (${recent_count} files)" ""))
)

; Recording
(defvar rec false)

(defvar recording_indicator_button "(button :onclick '' (box :class 'recording' :space-evenly false :spacing 8 (label :class 'recording-indicator' :text '') (label :class 'recording-label' :text 'Recording ...')))")

(defwidget recording_indicator []
  (literal :content {rec ? recording_indicator_button : ""})
)

; Volume
(defvar vol false)

(defpoll vol_percentage :interval "5s"
  `~/.local/bin/sysinfo get_vol`
)

(defvar vol_icon "")

(defwidget volume []
  (eventbox :onhover "${eww} update vol=true" :onhoverlost "${eww} update vol=false"
    (box :orientation "h" :space-evenly "false" :spacing 2
      (revealer :transition "slideleft" :reveal vol :duration "500ms"
        (box :class "volreveal" :space-evenly false :spacing 4
          (label :class "volpercentage" :text "${vol_percentage}%")
          (scale :class "volbar" :orientation "h" :tooltip "Volume: ${vol_percentage}%" :max 101 :min 0 :onchange "~/.local/bin/sysinfo set_vol {}"  :value vol_percentage)
        )
      )
      (button :class "volume" :onclick "pavucontrol" "${vol_icon}")
    )
  )
)

; Network
(defpoll network_status_icon :interval "30s"
  `~/.local/bin/sysinfo get_network_icon`
)

(defwidget network []
  (box :space-evenly "false" (button :class "network" :onclick "alacritty -e nmtui" :tooltip "Network Status" "${network_status_icon}"))
)

; Nightlight
(defvar nightlight_icon "")

(defwidget nightlight []
  (box :space-evenly "false" (button :class "nightlight" :onclick "~/.local/bin/nightlight" :tooltip "Nightlight" "${nightlight_icon}"))
)

; Idle Inhibitor
(defvar idle_icon "")

(defwidget idle_inhibitor []
  (box :space-evenly "false" (button :class "idle-inhibitor" :onclick "~/.local/bin/idle toggle" :tooltip "Idle Inhibitor" "${idle_icon}"))
)

; Applications Launcher
(defwidget app_launcher []
  (box :space-evenly "false" (button :class "app-launcher" :onclick "~/.local/bin/launcher" :tooltip "Applications" ""))
)

; Right System Icons
(defwidget rightsys []
  (box :space-evenly false :spacing 4 (volume) (network) (idle_inhibitor) (nightlight))
)

; Left System Icons
(defwidget leftsys []
  (box :space-evenly false :spacing 4 (app_launcher) (zathura) (sysmonitor) (recording_indicator))
)

; Status Bar
(defwindow bar
  :monitor 0
  :windowtype "dock"
  :stacking "fg"
  :geometry (geometry :width "100%" :anchor "bottom center")
  :exclusive true
  (box :class "bar-wrapper" :space-evenly "true"
    (box :halign "start" :space-evenly "false" :spacing 8 (launcher) (leftsys))
    (box :halign "center" (literal :content "${workspaces}"))
    (box :halign "end" :space-evenly "false" :spacing 12 (rightsys) (clock :hour "${hour}" :min "${min}") (power))
  )
)
